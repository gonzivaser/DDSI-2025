@startuml

class Entidad {
    - id : Integer
    - denominacionLegal : String
    - demoraAproximada : Integer
    - fechaAltaIGJ : LocalDate
    - fechaAltaSistema : LocalDate
    - tramites : List<Tramite>
    - responsables : List<Responsable>
}

class Responsable {
    - nombre : String
    - email : String
}

class Tramite {
    - nombre : String
    - codigo : Integer
    - tiempoResolucion : Integer
    - formularios : List<Formulario>
    - porcentajeDeFormulario : Integer

    + costoFormularios() : Integer
}

class Formulario {
    - costo : Integer
    - preguntas : List<Pregunta>
    - fechaAlta : LocalDate
    - cantidadDeVecesRenovado : Integer
    - entidadAsociada : Entidad

    + calcularFechaDeVencimiento() : LocalDate
    + estaVencido() : bool
    + renovar() : void
}

class GestorDeVencimiento {
    - emailSender : EmailSender
    - formularios : List<Formulario>
}

class EmailSender {
    + enviarMail(String destinatario, String asunto, String campo) : void
}

class Pregunta {
    - nombre : String
    - tipoPregunta : TipoDePregunta
    - esObligatorio : Bool
}

enum TipoDePregunta {
    SINGLE_CHOICE,
    MULTIPLE_CHOICE,
    TEXTO
}

class SolicitudDeTramite {
    - personaSolicitante : Responsable
    - tramite : Tramite
    - formulariosContestados : List<FormularioContestado>
    - estadoActual : TipoDeEstado
    - historialDeEstados : List<EstadoSolicitud>
    - posibleEstadoDeSolicitud : PosibleEstadoDeSolicitud

    + notificarAlta() : void
    + cambiarEstado() : void
}

class FormularioContestado {
    - formulario : Formulario
    - respuestas : List<Respuesta>
}

class Respuesta {
    - tipoDePregunta : TipoDePregunta
    - valorContestado : String
}

enum TipoDeEstado {
    EN_REVISION,
    DIFERIDO,
    ACEPTADO,
    RECHAZADO
}

class EstadoSolicitud {
    - tipoDeEstado : TipoDeEstado
    - fechaDeCambioDeEstado : LocalDateTime
    - motivo : String
    - documentosAdjuntos : List<Documento>
}

class Documento {
    - url : String
    - nombre : String
}

class PosibleEstadoDeSolicitud {
    - acciones : List<AccionConfigurable>
}

interface AccionConfigurable {
    + ejecutarAccion() : void
}

class EnviarMail implements AccionConfigurable {
    - mensaje : String
    - emailSender : EmailSender

    + ejecutarAccion() : void
}

class EnviarAlerta implements AccionConfigurable {
    - mensaje : String
    - alerta : Alerta

    + ejecutarAccion() : void
}

class Alerta {
    - nombre : String
    - descripcion : String
}

class LlamarAPIExterna implements AccionConfigurable {
    - method : MethodHTTP
    - uri : String
    - configuracionBody : List<ConfiguracionBodyJSON>

    + ejecutarAccion() : void
}

enum MethodHTTP {
    GET,
    POST
}

class ConfiguracionBodyJSON {
    - claveJSON : String
    - campo : Campo
}

Entidad --> Tramite : "*"
Entidad --> Responsable : "*"

Tramite --> Formulario : "*"

Formulario --> Pregunta : "*"
Formulario --> Entidad

Pregunta o-- TipoDePregunta

FormularioContestado --> Formulario
FormularioContestado --> Respuesta : "*"

Respuesta o-- TipoDePregunta

GestorDeVencimiento --> Formulario : "*"
GestorDeVencimiento --> EmailSender

SolicitudDeTramite --> Responsable
SolicitudDeTramite --> Tramite
SolicitudDeTramite --> FormularioContestado : "*"
SolicitudDeTramite o-- TipoDeEstado
SolicitudDeTramite --> EstadoSolicitud : "*"
SolicitudDeTramite --> PosibleEstadoDeSolicitud

EstadoSolicitud --> Documento
EstadoSolicitud o-- TipoDeEstado

PosibleEstadoDeSolicitud --> AccionConfigurable : "*"

EnviarMail --> EmailSender

EnviarAlerta --> Alerta

LlamarAPIExterna --> MethodHTTP
LlamarAPIExterna --> ConfiguracionBodyJSON



@enduml