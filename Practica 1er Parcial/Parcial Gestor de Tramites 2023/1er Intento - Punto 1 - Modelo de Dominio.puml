@startuml

class Entidad {
    - id : Integer
    - denominacionLegal : String
    - demoraAproximada : Integer
    - fechaAltaIGJ : LocalDate
    - fechaAltaSistema : LocalDate
    - mail : String
    - tramites : List<Tramite>
}

class Tramite {
    - nombre : String
    - codigo : Integer
    - tiempoResolucion : Integer
    - formularios : List<Formulario>
    - porcentajeDeFormulario : Integer

    + costoFormularios() : Integer
}

class Formulario {
    - costo : Integer
    - campos : List<Campo>
    - fechaAlta : LocalDate
    - cantidadDeVecesRenovado : Integer
    - responsable : Entidad

    + fechaDeVencimiento() : LocalDate
    + estaVencido() : Boolx
    + hacerRenovacion() : void
}

class Campo {
    - esObligatorio : Bool
    - tipoDePregunta : TipoDePregunta
    - respuesta : String
}

enum TipoDePregunta {
    SINGLE_CHOICE,
    MULTIPLE_CHOICE,
    TEXTO
}

class GestorDeVencimiento {
    - emailSender : EmailSender
    - formularios : List<Formulario>

    + verificarVencimientos() : void
}

class EmailSender {
    + enviarMail(String destinatario, String asunto, String campo) : void
}

class SolicitudDeTramite {
    - entidad : Entidad
    - solicitante : Solicitante
    - tramite : Tramite
    - estadoActual : EstadoDeSolicitud
    - historialDeEstados : List<Estado>
    - acciones : List<AccionConfigurable>
    - emailSender : EmailSender
    - estaEnEstadoPendiente : Bool

    + cambiarEstado() : void
    + notificarAlta() : void
}

class Solicitante {
    - nombre : String
    - email : String
}

class Estado {
    - motivo : String
    - documentosAdjuntos : List<Documento>
}

class Documento {
    - url : String
    - nombre : String
}

enum EstadoDeSolicitud {
    EN_REVISION,
    DIFERIDO,
    ACEPTADO,
    RECHAZADO
}

interface AccionConfigurable {
    + ejecutarAccion() : void
}

class EnviarMail implements AccionConfigurable {
    - mensaje : String
    - emailSender : EmailSender

    + ejecutarAccion() : void
}

class EnviarAlerta implements AccionConfigurable {
    - mensaje : String
    - alerta : Alerta

    + ejecutarAccion() : void
}

class Alerta {
    - nombre : String
    - descripcion : String
}

class LlamarAPIExterna implements AccionConfigurable {
    - method : MethodHTTP
    - uri : String
    - configuracionBody : List<ConfiguracionBodyJSON>

    + ejecutarAccion() : void
}

enum MethodHTTP {
    GET,
    POST
}

class ConfiguracionBodyJSON {
    - claveJSON : String
    - campo : Campo
}




@enduml